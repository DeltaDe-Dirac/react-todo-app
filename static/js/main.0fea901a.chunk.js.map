{"version":3,"sources":["components/ToDoInput/ToDoInput.js","components/ToDoList/ToDoList.js","components/ToDoTabs/ToDoTabs.js","pages/ToDoPage/ToDoPage.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoInput","addNewTodo","formRef","createRef","className","InputGroup","size","Prepend","Text","id","FormControl","aria-label","aria-describedby","placeholder","ref","onKeyPress","e","target","value","code","findDOMNode","current","handleKeyPressed","ToDoList","todoList","ListGroup","variant","map","todo","index","Item","type","htmlFor","uuidv4","ToDoTabs","Nav","defaultActiveKey","Link","eventKey","Badge","ToDoPage","useState","todos","setTodos","Container","console","log","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAKe,SAASA,EAAT,GAAoC,IAAfC,EAAc,EAAdA,WAC5BC,EAAUC,sBAShB,OACE,qCACE,oBAAIC,UAAU,yBAAd,8BACA,eAACC,EAAA,EAAD,CAAYD,UAAU,aAAaE,KAAK,KAAxC,UACE,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,uBAApB,wBAEF,cAACC,EAAA,EAAD,CACEC,aAAW,QACXC,mBAAiB,uBACjBC,YAAY,eACZC,IAAKZ,EACLa,WAAY,SAACC,GAAD,OAnBpB,SAA0BA,GACpBA,EAAEC,OAAOC,OAAoB,UAAXF,EAAEG,OACtBlB,EAAWe,EAAEC,OAAOC,OACpBE,sBAAYlB,EAAQmB,SAASH,MAAQ,IAgBdI,CAAiBN,Y,0BCtB/B,SAASO,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OACE,mCACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,QAAQtB,UAAU,YAArC,SACGoB,EAASG,KAAI,SAACC,EAAMC,GAAP,OACZ,cAACJ,EAAA,EAAUK,KAAX,CAAgBJ,QAAQ,OAAxB,SACE,sBAAKtB,UAAU,yBAAf,UACE,uBAAOA,UAAU,mBAAmB2B,KAAK,WAAWtB,GAAE,gCAA2BoB,KACjF,uBAAOzB,UAAU,mBAAmB4B,QAAO,gCAA2BH,GAAtE,SACGD,QAJ6BK,sB,0BCN/B,SAASC,IACtB,OACE,qBAAK9B,UAAU,YAAf,SACE,eAAC+B,EAAA,EAAD,CAAKT,QAAQ,OAAOU,iBAAiB,MAArC,UACE,cAACD,EAAA,EAAIL,KAAL,UACE,eAACK,EAAA,EAAIE,KAAL,CAAUC,SAAS,MAAnB,iBACM,cAACC,EAAA,EAAD,CAAOb,QAAQ,OAAf,oBAGR,cAACS,EAAA,EAAIL,KAAL,UACE,eAACK,EAAA,EAAIE,KAAL,CAAUC,SAAS,SAAnB,oBACS,cAACC,EAAA,EAAD,CAAOb,QAAQ,SAAf,oBAGX,cAACS,EAAA,EAAIL,KAAL,UACE,eAACK,EAAA,EAAIE,KAAL,CAAUC,SAAS,YAAnB,uBACY,cAACC,EAAA,EAAD,CAAOb,QAAQ,UAAf,yBCbP,SAASc,IACtB,MAA0BC,mBAAS,CACjC,kCACA,2BACA,gCACA,iCACA,8CACA,8BANF,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,qBAAKvC,UAAU,YAAf,SACE,eAACwC,EAAA,EAAD,WACE,qBAAKxC,UAAU,kBAAf,SACE,cAAC,EAAD,CAAWH,WATnB,SAAoB2B,GAClBiB,QAAQC,IAAIlB,GACZe,EAASD,EAAMK,OAAOnB,SASlB,qBAAKxB,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAUoB,SAAUkB,WC1Bf,SAASM,IACtB,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,MCTN,IAYe6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fea901a.chunk.js","sourcesContent":["import { createRef } from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport \"./ToDoInput.css\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nexport default function ToDoInput({ addNewTodo }) {\r\n  const formRef = createRef();\r\n\r\n  function handleKeyPressed(e) {\r\n    if (e.target.value && e.code === \"Enter\") {\r\n      addNewTodo(e.target.value);\r\n      findDOMNode(formRef.current).value = \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"Todo-title text-center\">My List of ToDos</h1>\r\n      <InputGroup className=\"Todo-input\" size=\"lg\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id=\"inputGroup-sizing-lg\">New ToDo</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          aria-label=\"Large\"\r\n          aria-describedby=\"inputGroup-sizing-sm\"\r\n          placeholder=\"What's Next?\"\r\n          ref={formRef}\r\n          onKeyPress={(e) => handleKeyPressed(e)}\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ToDoList.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function ToDoList({ todoList }) {\r\n  return (\r\n    <>\r\n      <ListGroup variant=\"flush\" className=\"Todo-list\">\r\n        {todoList.map((todo, index) => (\r\n          <ListGroup.Item variant=\"dark\" key={uuidv4()}>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id={`flexSwitchCheckDefault${index}`}></input>\r\n              <label className=\"form-check-label\" htmlFor={`flexSwitchCheckDefault${index}`}>\r\n                {todo}\r\n              </label>\r\n            </div>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ToDoTabs.css\";\r\nimport { Nav, Badge } from \"react-bootstrap\";\r\n\r\nexport default function ToDoTabs() {\r\n  return (\r\n    <div className=\"Todo-tabs\">\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"all\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"all\">\r\n            All <Badge variant=\"info\">9</Badge>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"active\">\r\n            Active <Badge variant=\"danger\">6</Badge>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"completed\">\r\n            Completed <Badge variant=\"warning\">3</Badge>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./ToDoPage.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ToDoInput from \"../../components/ToDoInput/ToDoInput\";\r\nimport ToDoList from \"../../components/ToDoList/ToDoList\";\r\nimport ToDoTabs from \"../../components/ToDoTabs/ToDoTabs\";\r\n\r\nexport default function ToDoPage() {\r\n  const [todos, setTodos] = useState([\r\n    \"Buy products in a grocery store\",\r\n    \" Schedule an appointment\",\r\n    \"Send CV and get your next job\",\r\n    \"Start your react final project\",\r\n    \"Be patient, motivated, disciplined and kind\",\r\n    \"Stay athletic and healthy\",\r\n  ]);\r\n\r\n  function addNewTodo(todo) {\r\n    console.log(todo);\r\n    setTodos(todos.concat(todo));\r\n  }\r\n\r\n  return (\r\n    <div className=\"Todo-page\">\r\n      <Container>\r\n        <div className=\"Todo-page-input\">\r\n          <ToDoInput addNewTodo={addNewTodo} />\r\n        </div>\r\n        <div className=\"Todo-page-tabs\">\r\n          <ToDoTabs />\r\n        </div>\r\n        <div className=\"Todo-page-list\">\r\n          <ToDoList todoList={todos} />\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\n\r\nimport ToDoPage from \"./pages/ToDoPage/ToDoPage\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoPage />\r\n      {/* <ReactLogo /> */}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}